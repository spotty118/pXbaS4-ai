enum UserStatus {
    INVITED
    VERIFIED
}

model User {
    id               String          @id @default(uuid())
    name             String?
    email            String?         @unique
    pictureUrl       String?         @default('https://i.imgur.com/ZdJSK3Y.jpeg')
    tokenInvitation  String?

    stripeCustomerId String?

    status           UserStatus      @default(VERIFIED)

    // this is the role of the user for the application
    globalRole       String          @default('USER')
    password         String?         @password @omit
    dateCreated      DateTime        @default(now())
    dateUpdated      DateTime        @updatedAt @default(now())

    applications     Application[]   @relation("user")
    notifications    Notification[]  @relation("user")
    supportTickets   SupportTicket[] @relation("user")
    subscriptions    Subscription[]  @relation("user")

    @@auth()
    @@allow("all", auth().id == this.id)
    @@allow('all', auth().globalRole == 'ADMIN')

    //we only allow that user to register if they don't create an admin role
    @@allow("create", globalRole != 'ADMIN')
    @@allow("read", true)
}

model Plan {

    id            String         @id @default(uuid())
    name          String?
    benefits      String?
    price         Float?

    subscriptions Subscription[] @relation("plan")
    dateCreated   DateTime       @default(now())
    dateUpdated   DateTime       @updatedAt @default(now())
    @@allow("all", true)
}

model Application {

    id                String   @id @default(uuid())
    description       String?
    status            String?
    dockerContainerId String?
    codeUrl           String?
    userId            String?
    user              User?    @relation(fields: [userId], references: [id], name: "user")

    dateCreated       DateTime @default(now())
    dateUpdated       DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model Notification {

    id          String   @id @default(uuid())
    message     String?
    isRead      Boolean?
    userId      String?
    user        User?    @relation(fields: [userId], references: [id], name: "user")

    dateCreated DateTime @default(now())
    dateUpdated DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model SupportTicket {

    id          String   @id @default(uuid())
    subject     String?
    message     String?
    status      String?
    userId      String?
    user        User?    @relation(fields: [userId], references: [id], name: "user")

    dateCreated DateTime @default(now())
    dateUpdated DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model Subscription {

    id          String   @id @default(uuid())
    status      String?
    startDate   String?
    endDate     String?
    userId      String?
    user        User?    @relation(fields: [userId], references: [id], name: "user")
    planId      String?
    plan        Plan?    @relation(fields: [planId], references: [id], name: "plan")

    dateCreated DateTime @default(now())
    dateUpdated DateTime @updatedAt @default(now())
    @@allow("all", true)
}
